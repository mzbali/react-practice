{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","history","useHistory","location","useLocation","ascending","URLSearchParams","search","get","sortedQuotes","quotes","sort","quoteA","quoteB","sortQuotes","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","allQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCkBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCqCSC,EAjCG,SAACR,GACjB,IAAMS,EAAUC,cACVC,EAAWC,cAEXC,EAAkC,QAD1B,IAAIC,gBAAgBH,EAASI,QACnBC,IAAI,QACtBC,EAfW,SAACC,EAAQL,GAC1B,OAAOK,EAAOC,MAAK,SAACC,EAAQC,GAC1B,OAAIR,EACKO,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAE7Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,KAUnBe,CAAWtB,EAAMkB,OAAQL,GAS9C,OACE,eAAC,WAAD,WACE,yBAAQU,QAVc,WAExBd,EAAQe,KAAK,CACXC,SAAUd,EAASc,SACnBV,OAAO,SAAD,OAAWF,EAAY,OAAS,UAMFZ,UAAU,YAA9C,kBACQY,EAAY,mBAAgB,qBAEpC,oBAAIZ,UAAWC,IAAQwB,KAAvB,SACGT,EAAaU,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEErB,GAAIqB,EAAMrB,GACVF,OAAQuB,EAAMvB,OACdD,KAAMwB,EAAMxB,MAHPwB,EAAMrB,a,iCCxBRsB,EAXO,WACpB,OACE,sBAAK5B,UAAWC,IAAQ4B,SAAxB,UACE,+CACA,cAAC,IAAD,CAAMxB,GAAG,aAAaL,UAAU,MAAhC,6B,QC4BS8B,UA5BG,WAChB,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAMF,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKlC,UAAU,WAAf,SACE,cAACuC,EAAA,EAAD,MAIFF,EACK,mBAAGrC,UAAU,mBAAb,SAAiCqC,IAEjB,IAArBF,EAAUK,OACL,cAAC,EAAD,IAGF,cAAC,EAAD,CAAWvB,OAAQkB","file":"static/js/5.2d9f6248.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n  const ascending = query.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, ascending);\n  const sortingBtnHandler = () => {\n    //history.push(`/quotes?sort=${!ascending ? 'asc' : 'desc'}`);\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${ascending ? 'desc' : 'asc'}`,\n    });\n  };\n\n  return (\n    <Fragment>\n      <button onClick={sortingBtnHandler} className=\"btn--flat\">\n        Sort {ascending ? 'Descending↓' : 'Ascending↑'}\n      </button>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>Page Not found</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: allQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n  if (allQuotes.length === 0) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={allQuotes} />;\n};\n\nexport default AllQuotes;\n"],"sourceRoot":""}